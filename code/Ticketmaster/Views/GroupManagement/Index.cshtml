@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Ticketmaster.Utilities.GroupManagementViewModel

@{
    ViewData["Title"] = "Group Management";
}

<div class="container">
    <div class="row">
        <!-- Left Side: Group Creation -->
        <div class="col-md-5">
            <h3>Select Employees</h3>
            <form id="groupForm">
                <ul class="list-group">
                    @foreach (var employee in Model.Employees)
                    {
                        <li class="list-group-item">
                            <input type="checkbox" name="selectedEmployees" value="@employee.Id" class="employee-checkbox" />
                            @employee.FirstName @employee.LastName
                        </li>
                    }
                </ul>
                <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#createGroupModal">
                    Create Group
                </button>
            </form>
        </div>

        <!-- Right Side: Group List -->
        <div class="col-md-5">
            <h3>Groups</h3>
            <ul class="list-group" id="groupList">
                @foreach (var group in Model.Groups)
                {
                    <li class="list-group-item group-item" data-groupid="@group.GroupId" data-groupname="@group.GroupName" data-managerid="@group.ManagerId" data-employeeids="@group.EmployeeIds">
                        @group.GroupName
                    </li>
                }
            </ul>
        </div>

        <!-- View Group Details -->
        <div class="modal fade" id="groupDetailsModal" tabindex="-1" aria-labelledby="groupDetailsModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="groupDetailsModalLabel">Group Details</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p><strong>Group ID:</strong> <span id="groupId"></span></p>
                        <p><strong>Group Name:</strong> <span id="groupName"></span></p>
                        <p><strong>Manager ID:</strong> <span id="managerId"></span></p>
                        <p><strong>Employee IDs:</strong> <span id="employeeIds"></span></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-warning" id="changeManagerBtn">Change Manager</button>
                        <button type="button" class="btn btn-danger" id="deleteGroupBtn">Delete Group</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Change Manager -->
        <div class="modal fade" id="changeManagerModal" tabindex="-1" aria-labelledby="changeManagerModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="changeManagerModalLabel">Change Manager</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <label for="newManagerSelect" class="form-label">Select New Manager</label>
                        <select id="newManagerSelect" class="form-select"></select>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="confirmManagerChangeBtn">Confirm</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Delete Group -->
        <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Deletion</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this group?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger" id="confirmDeleteGroupBtn">Delete</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pop-up for Group Creation -->
        <div class="modal fade" id="createGroupModal" tabindex="-1" aria-labelledby="createGroupModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createGroupModalLabel">Create New Group</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form asp-action="CreateGroup" method="post" id="groupCreationForm">
                            <div class="mb-3">
                                <label for="groupName" class="form-label">Group Name</label>
                                <input type="text" id="groupName" name="groupName" class="form-control" required />
                            </div>
                            <div class="mb-3">
                                <label for="managerSelect" class="form-label">Select Manager</label>
                                <select id="managerSelect" name="managerId" class="form-select" required></select>
                            </div>
                            <input type="hidden" id="selectedEmployeeIds" name="selectedEmployeeIds" />

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Create Group</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let checkboxes = document.querySelectorAll(".employee-checkbox");
        let managerSelect = document.getElementById("managerSelect");
        let selectedEmployeeIdsInput = document.getElementById("selectedEmployeeIds");
        let groupItems = document.querySelectorAll(".group-item");
        let deleteGroupBtn = document.getElementById("deleteGroupBtn");
        let confirmDeleteGroupBtn = document.getElementById("confirmDeleteGroupBtn");
        let changeManagerBtn = document.getElementById("changeManagerBtn");
        let confirmManagerChangeBtn = document.getElementById("confirmManagerChangeBtn");
        let newManagerSelect = document.getElementById("newManagerSelect");

        let selectedGroupId = null;
        let selectedGroupElement = null;
        let selectedEmployeeIds = [];

        groupItems.forEach(item => {
            item.addEventListener("dblclick", function () {
                selectedGroupId = this.getAttribute("data-groupid");
                selectedGroupElement = this;
                selectedEmployeeIds = this.getAttribute("data-employeeids").split(",");

                document.getElementById("groupId").textContent = selectedGroupId;
                document.getElementById("groupName").textContent = this.getAttribute("data-groupname");
                document.getElementById("managerId").textContent = this.getAttribute("data-managerid");
                document.getElementById("employeeIds").textContent = this.getAttribute("data-employeeids");

                new bootstrap.Modal(document.getElementById("groupDetailsModal")).show();
            });
        });

        changeManagerBtn.addEventListener("click", function () {
            newManagerSelect.innerHTML = "";
            selectedEmployeeIds.forEach(id => {
                if (id.trim() !== "") {
                    let option = document.createElement("option");
                    option.value = id;
                    option.textContent = "Employee ID: " + id;
                    newManagerSelect.appendChild(option);
                }
            });

            new bootstrap.Modal(document.getElementById("changeManagerModal")).show();
        });

        confirmManagerChangeBtn.addEventListener("click", function () {
            let newManagerId = newManagerSelect.value;
            if (!newManagerId) {
                alert("Please select a new manager.");
                return;
            }

            fetch(`/GroupManagement/ChangeManager`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ groupId: selectedGroupId, newManagerId: newManagerId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.newEmployeeIds !== undefined) {
                    document.getElementById("managerId").textContent = newManagerId;
                    document.getElementById("employeeIds").textContent = data.newEmployeeIds;
                    selectedGroupElement.setAttribute("data-managerid", newManagerId);
                    selectedGroupElement.setAttribute("data-employeeids", data.newEmployeeIds);
                    bootstrap.Modal.getInstance(document.getElementById("changeManagerModal")).hide();
                } else {
                    alert("Error changing manager.");
                }
            })
            .catch(error => console.error("Error:", error));
        });

        deleteGroupBtn.addEventListener("click", function () {
            new bootstrap.Modal(document.getElementById("confirmDeleteModal")).show();
        });

        confirmDeleteGroupBtn.addEventListener("click", function () {
            if (selectedGroupId) {
                fetch(`/GroupManagement/DeleteGroup/${selectedGroupId}`, { method: "POST" })
                    .then(response => {
                        if (response.ok) {
                            selectedGroupElement.remove();
                            bootstrap.Modal.getInstance(document.getElementById("groupDetailsModal")).hide();
                            bootstrap.Modal.getInstance(document.getElementById("confirmDeleteModal")).hide();
                        } else {
                            alert("Error deleting group.");
                        }
                    })
                    .catch(error => console.error("Error:", error));
            }
        });

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener("change", updateManagerDropdown);
        });

        function updateManagerDropdown() {
            managerSelect.innerHTML = "";
            let selectedEmployees = [];

            checkboxes.forEach(checkbox => {
                if (checkbox.checked) {
                    let name = checkbox.parentElement.textContent.trim();
                    let id = checkbox.value;
                    selectedEmployees.push(id);
                    let option = document.createElement("option");
                    option.value = id;
                    option.textContent = name;
                    managerSelect.appendChild(option);
                }
            });

            selectedEmployeeIdsInput.value = selectedEmployees.join(",");
        }
    });
</script>
